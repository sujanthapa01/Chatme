"use strict";var D=Object.create;var u=Object.defineProperty;var S=Object.getOwnPropertyDescriptor;var k=Object.getOwnPropertyNames;var w=Object.getPrototypeOf,z=Object.prototype.hasOwnProperty;var I=(t,e)=>{for(var n in e)u(t,n,{get:e[n],enumerable:!0})},b=(t,e,n,s)=>{if(e&&typeof e=="object"||typeof e=="function")for(let o of k(e))!z.call(t,o)&&o!==n&&u(t,o,{get:()=>e[o],enumerable:!(s=S(e,o))||s.enumerable});return t};var a=(t,e,n)=>(n=t!=null?D(w(t)):{},b(e||!t||!t.__esModule?u(n,"default",{value:t,enumerable:!0}):n,t)),_=t=>b(u({},"__esModule",{value:!0}),t);var N={};I(N,{default:()=>P});module.exports=_(N);var v=a(require("path")),l=a(require("fs")),y=a(require("dotenv")),x=a(require("dotenv-expand"));function E(t,e,n=!1){for(let o of e){let i=v.default.join(t,o);if(l.default.existsSync(i)&&l.default.statSync(i).isFile())return n?i:l.default.readFileSync(i,"utf-8")}let s=v.default.dirname(t);if(s!==t)return E(s,e,n)}function h(t){let{mode:e,envDir:n,prefix:s,ignoreProcessEnv:o}=t;if(e==="local")throw new Error('"local" cannot be used as a mode name because it conflicts with the .local postfix for .env files.');let i={},d=[`.env.${e}.local`,`.env.${e}`,".env.local",".env"];for(let r in process.env)r.startsWith(s)&&i[r]===void 0&&(i[r]=process.env[r]);for(let r of d){let m=E(n,[r],!0);if(m){let p=y.default.parse(l.default.readFileSync(m),{debug:!!process.env.DEBUG||void 0});(0,x.default)({parsed:p,ignoreProcessEnv:o});for(let[c,f]of Object.entries(p))c.startsWith(s)&&i[c]===void 0?i[c]=f:c==="NODE_ENV"&&(process.env.VITE_USER_NODE_ENV=f)}}return i}function j(t){let e={};return Object.keys(process.env).map(n=>{String(n).includes(t)&&(e[n]=process.env[n]||"")}),e}var O="vite-plugin-env-compatible";var g=a(require("path"));function P(t={}){let e={mountedPath:"process.env",...t};return{name:O,enforce:"pre",config(n,{mode:s}){let o=n.root||process.cwd(),i=n.envDir||"./";g.default.isAbsolute(i||"")||(i=g.default.join(o,i));let d=typeof e.prefix>"u"?"VUE_APP_":e.prefix,r=h({mode:s,envDir:i,prefix:d,ignoreProcessEnv:e.ignoreProcessEnv??!1}),m=j(d),p={};e.mountedPath?.startsWith("process.env")&&(p["process.env.VITE"]=JSON.stringify(!0)),Object.keys({...r,...m}).map(c=>{let f=r[c];p[`${e.mountedPath}.${c}`]=JSON.stringify(f)}),n.define={...n.define||{},...p}}}}
